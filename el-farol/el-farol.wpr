#!wing
#!version=10.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['.Rproj.user',
                                     'Proposal.log',
                                     '.Rhistory',
                                     'attendance.nb.html',
                                     'el-farol.Rproj',
                                     'Proposal.bbl',
                                     'runner.csv',
                                     'Proposal.pdf',
                                     'Proposal.aux',
                                     '.RData',
                                     'Proposal.blg',
                                     'attendance.Rmd',
                                     'Proposal.synctex.gz',
                                     'el-farol.py',
                                     'figs'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('el-farol.py'): ('project',
        ('--show',
         '')),
                      loc('elfarol.py'): ('project',
        ('--show',
         '')),
                      loc('runner.py'): ('project',
        ('--capacity 50 70 10 --tolerance 15 36 5 --max_steps 104',
         ''))}
[user attributes]
debug.recent-run-args = {loc('el-farol.py'): ['--show',
        '--show --basket_min 12',
        '--show --population 7',
        '--show --tolerance 15',
        '--show --tolerance 10'],
                         loc('elfarol.py'): ['--show',
        '--help',
        '--show --max_steps 260',
        '--show --max_runs 260'],
                         loc('runner.py'): ['--capacity 50 70 10 --tolerance 15 36 5 --max_steps 104',
        '--capacity 50 70 10 --max_steps 100 201 100',
        '--capacity 50 70 10',
        '--foo 2 7 3',
        '--foo 2 3',
        '--foo 2',
        '--foo 1',
        '--help']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2557280118255728,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(0,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../AppData/Local/Programs/Python/Python312/Lib/_weakrefset.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/_weakrefset.py'),
                      'WeakSet')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/abc.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/abc.py'),
                             'update_abstractmethods')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/abc.py'),
                      'ABC')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/argparse.py'),
                             '__version__')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/argparse.py'),
                      'Action')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/random.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Program Files/Wing Personal 10/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'),
                      'alpha_composite')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_api/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_api/__init__.py'),
                      'caching_module_getattr')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/pyplot.py'),
                             '_warn_if_gui_out_of_main_thread')]],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/agent.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/agent.py'),
                             'Agent')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/agent.py'),
                      'Agent')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/batchrunner.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/batchrunner.py'),
                      'batch_run')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/datacollection.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/datacollection.py'),
                      'DataCollector')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/model.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/model.py'),
                      'Model')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/linalg/linalg.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/linalg/linalg.py'),
                             '__all__')]],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/linalg/linalg.py'),
                      'array_function_dispatch')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/base.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/base.py'),
                             '_shared_docs')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/base.py'),
                      'IndexOpsMixin')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/indexes/base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/indexes/base.py'),
                      'ensure_has_len')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/seaborn/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/seaborn/_base.py'),
                      'categorical_order')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/seaborn/_core/data.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/seaborn/_core/data.py'),
                      'convert_dataframe_to_pandas')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/unittest/case.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/unittest/case.py'),
                      'addModuleCleanup')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../../dynamics/chaos_book/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../learn/README.md'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('../../learn/bayes1.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('../../learn/bayes1.py'),
        'alphas')]},
        loc('../../learn/cavi1.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('../../learn/cavi1.py'),
        'ys')]],
                                      'top-node': [('generic attribute',
        loc('../../learn/cavi1.py'),
        'ax1')]},
        loc('../../learn/fashion.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/fashion.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../learn/fashion.py'),
                      'class_names')]},
        loc('../../learn/fcs.py'): {'expanded-nodes': [],
                                    'selected-nodes': [None],
                                    'top-node': None},
        loc('../../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../learn/fcs/fcs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/fcs.py'),
                      'args')]},
        loc('../../learn/fcs/gcps.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/gcps.py'),
                      'a')]},
        loc('../../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/partition.py'),
                      'args')]},
        loc('../../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../../learn/flowers.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/flowers.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../learn/flowers.py'),
                      'args')]},
        loc('../../learn/train.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('../../learn/train.py'),
        '_')]],
                                      'top-node': [('generic attribute',
        loc('../../learn/train.py'),
        'alpha')]},
        loc('../../tm/README.md'): {'expanded-nodes': [],
                                    'selected-nodes': [None],
                                    'top-node': None},
        loc('../mesa-test/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../mesa-test/el-farol.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../mesa-test/template.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../mesa-test/template.py'),
                      'args')]},
        loc('../mesa-test/wealth.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../mesa-test/wealth.py'),
                      'agent')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('bar.py'): {'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': [('class def',
                                      loc('bar.py'),
                                      'Bar')]},
        loc('el-farol.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('el-farol.py'),
        'agent_vars')]},
        loc('elfarol.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('function def',
        loc('elfarol.py'),
        'add_common_parameters')]},
        loc('patron.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('class def',
        loc('patron.py'),
        'Patron')]},
        loc('runner.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('runner.py'),
        'args')]},
        loc('strategy.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('class def',
        loc('strategy.py'),
        'Average')]},
        loc('unknown:<untitled> #18'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'color',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'N',
                                       'fReverse': False,
                                       'fSearchText': 'population',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('strategy.py'),
        {'attrib-starts': [('Trend|0|',
                            89),
                           ('Trend|0|.get_predicted|0|',
                            101)],
         'code-line': '\t\tClamp into range from [0,N]\r\n',
         'first-line': 87,
         'folded-linenos': [],
         'sel-line': 104,
         'sel-line-start': 3353,
         'selection_end': 3381,
         'selection_start': 3380,
         'zoom': 0},
        1739839729.3354297],
        [loc('strategy.py'),
         {'attrib-starts': [('Trend|0|',
                             89),
                            ('Trend|0|.get_predicted|0|',
                             101)],
          'code-line': '\t\treturn  min(0,max(z[0] * len(y) + z[1],self.N))\r\n',
          'first-line': 98,
          'folded-linenos': [],
          'sel-line': 109,
          'sel-line-start': 3479,
          'selection_end': 3526,
          'selection_start': 3526,
          'zoom': 0},
         1739839730.8406563],
        [loc('strategy.py'),
         {'attrib-starts': [('Trend|0|',
                             89),
                            ('Trend|0|.get_predicted|0|',
                             101)],
          'code-line': '\t\treturn  min(0,max(z[0] * len(y) + z[1],self.N))\r\n',
          'first-line': 98,
          'folded-linenos': [],
          'sel-line': 109,
          'sel-line-start': 3479,
          'selection_end': 3526,
          'selection_start': 3525,
          'zoom': 0},
         1739839739.0685816],
        [loc('strategy.py'),
         {'attrib-starts': [('Strategy|0|',
                             30)],
          'code-line': '\t\tm         The minimim number of data points in log required to make a prediction\r\n',
          'first-line': 32,
          'folded-linenos': [],
          'sel-line': 37,
          'sel-line-start': 1217,
          'selection_end': 1237,
          'selection_start': 1237,
          'zoom': 0},
         1739839764.757821],
        [loc('bar.py'),
         {'attrib-starts': [('Bar|0|',
                             33),
                            ('Bar|0|.__init__|0|',
                             45)],
          'code-line': '\t\tstrategyfactory = StrategyFactory(self.random,N,self.log)\r\n',
          'first-line': 60,
          'folded-linenos': [],
          'sel-line': 65,
          'sel-line-start': 2128,
          'selection_end': 2163,
          'selection_start': 2148,
          'zoom': 0},
         1739839770.2889092],
        [loc('elfarol.py'),
         {'attrib-starts': [],
          'code-line': '            review_interval = args.review_interval,\r\n',
          'first-line': 106,
          'folded-linenos': [],
          'sel-line': 109,
          'sel-line-start': 3899,
          'selection_end': 3950,
          'selection_start': 3950,
          'zoom': 0},
         1739839803.3403585],
        [loc('runner.py'),
         {'attrib-starts': [],
          'code-line': "            'k'               :  get_param(args.k,default=12),\r\n",
          'first-line': 57,
          'folded-linenos': [],
          'sel-line': 78,
          'sel-line-start': 2940,
          'selection_end': 2989,
          'selection_start': 2989,
          'zoom': 0},
         1739839809.027243],
        [loc('runner.py'),
         {'attrib-starts': [],
          'code-line': "'''\r\n",
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 724,
          'selection_end': 727,
          'selection_start': 727,
          'zoom': 0},
         1739839819.1940606],
        [loc('runner.py'),
         {'attrib-starts': [('parse_arguments|0|',
                             34)],
          'code-line': '    N = 100\r\n',
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 41,
          'sel-line-start': 1505,
          'selection_end': 1510,
          'selection_start': 1509,
          'zoom': 0},
         1739839821.8345602],
        [loc('runner.py'),
         {'attrib-starts': [('parse_arguments|0|',
                             34)],
          'code-line': "    parser.add_argument('--N', type=int, nargs = '*')\r\n",
          'first-line': 37,
          'folded-linenos': [],
          'sel-line': 48,
          'sel-line-start': 1659,
          'selection_end': 1687,
          'selection_start': 1686,
          'zoom': 0},
         1739839823.2769356],
        [loc('runner.py'),
         {'attrib-starts': [],
          'code-line': "            'N'      :  get_param(args.population,default=100),\r\n",
          'first-line': 59,
          'folded-linenos': [],
          'sel-line': 76,
          'sel-line-start': 2776,
          'selection_end': 2790,
          'selection_start': 2789,
          'zoom': 0},
         1739839824.5651264],
        [loc('runner.py'),
         {'attrib-starts': [],
          'code-line': "            'N'      :  get_param(args.N,default=100),\r\n",
          'first-line': 59,
          'folded-linenos': [],
          'sel-line': 76,
          'sel-line-start': 2776,
          'selection_end': 2816,
          'selection_start': 2816,
          'zoom': 0},
         1739839826.7892845],
        [loc('strategy.py'),
         {'attrib-starts': [],
          'code-line': '#!/usr/bin/env python\r\n',
          'first-line': 119,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1739843523.7608142],
        [loc('runner.py'),
         {'attrib-starts': [('parse_arguments|0|',
                             34)],
          'code-line': "    parser.add_argument('--tolerance',  type=int, nargs = '*')\r\n",
          'first-line': 43,
          'folded-linenos': [],
          'sel-line': 51,
          'sel-line-start': 1917,
          'selection_end': 1979,
          'selection_start': 1979,
          'zoom': 0},
         1739843603.3885581],
        [loc('runner.py'),
         {'attrib-starts': [],
          'code-line': "            'k'               : get_param(args.k,default=12),\r\n",
          'first-line': 57,
          'folded-linenos': [],
          'sel-line': 77,
          'sel-line-start': 2846,
          'selection_end': 2878,
          'selection_start': 2878,
          'zoom': 0},
         1739843634.7248077],
        [loc('runner.py'),
         {'attrib-starts': [],
          'code-line': "    output_file = args.output if len(splitext(args.output)[1])>0 else f'{args.output}.csv'\r\n",
          'first-line': 82,
          'folded-linenos': [],
          'sel-line': 87,
          'sel-line-start': 3148,
          'selection_end': 3163,
          'selection_start': 3152,
          'zoom': 0},
         1739843662.8556545],
        [loc('runner.py'),
         {'attrib-starts': [],
          'code-line': "    output_file = args.output if len(splitext(args.output)[1])>0 else f'{args.output}.csv'\r\n",
          'first-line': 2,
          'folded-linenos': [],
          'sel-line': 87,
          'sel-line-start': 3148,
          'selection_end': 3163,
          'selection_start': 3152,
          'zoom': 0},
         1739844907.304911],
        [loc('strategy.py'),
         {'attrib-starts': [('Strategy|0|',
                             30)],
          'code-line': '\t\tm         The minimim number of data points in log required to make a prediction\r\n',
          'first-line': 32,
          'folded-linenos': [],
          'sel-line': 37,
          'sel-line-start': 1217,
          'selection_end': 1237,
          'selection_start': 1237,
          'zoom': 0},
         1739844919.0940187],
        [loc('strategy.py'),
         {'attrib-starts': [('StrategyFactory|0|',
                             111),
                            ('StrategyFactory|0|.__init__|0|',
                             113)],
          'code-line': '\t\tself.log = log\r\n',
          'first-line': 113,
          'folded-linenos': [],
          'sel-line': 115,
          'sel-line-start': 3655,
          'selection_end': 3671,
          'selection_start': 3668,
          'zoom': 0},
         1739845050.6365242],
        [loc('elfarol.py'),
         {'attrib-starts': [],
          'code-line': '            review_interval = args.review_interval,\r\n',
          'first-line': 106,
          'folded-linenos': [],
          'sel-line': 109,
          'sel-line-start': 3899,
          'selection_end': 3950,
          'selection_start': 3950,
          'zoom': 0},
         1739852609.4029362]],
        20),
        'current-loc': loc('README.md'),
        'editor-state-list': [(loc('bar.py'),
                               {'attrib-starts': [('Bar|0|',
        33),
        ('Bar|0|.__init__|0|',
         45)],
                                'code-line': '\t\tstrategyfactory = StrategyFactory(self.random,N,self.log)\r\n',
                                'first-line': 60,
                                'folded-linenos': [],
                                'sel-line': 65,
                                'sel-line-start': 2128,
                                'selection_end': 2163,
                                'selection_start': 2148,
                                'zoom': 0}),
                              (loc('elfarol.py'),
                               {'attrib-starts': [],
                                'code-line': '            review_interval = args.review_interval,\r\n',
                                'first-line': 106,
                                'folded-linenos': [],
                                'sel-line': 109,
                                'sel-line-start': 3899,
                                'selection_end': 3950,
                                'selection_start': 3950,
                                'zoom': 0}),
                              (loc('patron.py'),
                               {'attrib-starts': [('Patron|0|',
        28),
        ('Patron|0|.decide_whether_to_attend|0|',
         51)],
                                'code-line': '\t\tself.attend = self.predictions[-1] < self.capacity\r\n',
                                'first-line': 39,
                                'folded-linenos': [],
                                'sel-line': 56,
                                'sel-line-start': 1895,
                                'selection_end': 1895,
                                'selection_start': 1895,
                                'zoom': 0}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'code-line': 'el-farol.Rproj|RMarkdown project\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 17,
                                'sel-line-start': 745,
                                'selection_end': 772,
                                'selection_start': 772,
                                'zoom': 0}),
                              (loc('runner.py'),
                               {'attrib-starts': [],
                                'code-line': "    output_file = args.output if len(splitext(args.output)[1])>0 else f'{args.output}.csv'\r\n",
                                'first-line': 2,
                                'folded-linenos': [],
                                'sel-line': 87,
                                'sel-line-start': 3148,
                                'selection_end': 3163,
                                'selection_start': 3152,
                                'zoom': 0}),
                              (loc('strategy.py'),
                               {'attrib-starts': [('StrategyFactory|0|',
        111),
        ('StrategyFactory|0|.__init__|0|',
         113)],
                                'code-line': '\t\tself.log = log\r\n',
                                'first-line': 113,
                                'folded-linenos': [],
                                'sel-line': 115,
                                'sel-line-start': 3655,
                                'selection_end': 3671,
                                'selection_start': 3668,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('bar.py'),
         loc('elfarol.py'),
         loc('patron.py'),
         loc('README.md'),
         loc('runner.py'),
         loc('strategy.py')]),
                               'open_files': ['bar.py',
        'patron.py',
        'runner.py',
        'strategy.py',
        'elfarol.py',
        'README.md']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1739845099.124113),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1739852606.7244515),
                 'user_data': {}},
        'window-alloc': (2,
                         1,
                         1354,
                         734)}]}
guimgr.recent-documents = [loc('README.md'),
                           loc('elfarol.py'),
                           loc('strategy.py'),
                           loc('runner.py'),
                           loc('bar.py'),
                           loc('patron.py')]
guimgr.visual-state = {loc('../../AppData/Local/Programs/Python/Python312/Lib/abc.py'): {'attrib-starts': [('ABCMeta|0|',
        91),
        ('ABCMeta|0|.__subclasscheck__|0|',
         120)],
        'code-line': '            return _abc_subclasscheck(cls, subclass)\r\n',
        'first-line': 103,
        'folded-linenos': [],
        'sel-line': 122,
        'sel-line-start': 3907,
        'selection_end': 3907,
        'selection_start': 3907,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1356),
        ('_ActionsContainer|0|._handle_conflict_error|0|',
         1642)],
        'code-line': '        raise ArgumentError(action, message % conflict_string)\r\n',
        'first-line': 1630,
        'folded-linenos': [],
        'sel-line': 1649,
        'sel-line-start': 61119,
        'selection_end': 61119,
        'selection_start': 61119,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'): {'attrib-starts': [('Image|0|',
        466),
        ('Image|0|.save|0|',
         2352)],
        'code-line': '                fp = builtins.open(filename, "w+b")\r\n',
        'first-line': 2415,
        'folded-linenos': [],
        'sel-line': 2434,
        'sel-line-start': 86823,
        'selection_end': 86823,
        'selection_start': 86823,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/agent.py'): {'attrib-starts': [('Agent|0|',
        32)],
        'code-line': '    def create_agents(cls, model: Model, n: int, *args, **kwargs) -> AgentSet[Agent]:\n',
        'first-line': 76,
        'folded-linenos': [],
        'sel-line': 88,
        'sel-line-start': 2539,
        'selection_end': 2581,
        'selection_start': 2581,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/batchrunner.py'): {'attrib-starts': [('_model_run_func|0|',
        144)],
        'code-line': '    while model.running and model.steps <= max_steps:\n',
        'first-line': 158,
        'folded-linenos': [],
        'sel-line': 170,
        'sel-line-start': 5820,
        'selection_end': 5820,
        'selection_start': 5820,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/base.py'): {'attrib-starts': [('IndexOpsMixin|0|',
        283),
        ('IndexOpsMixin|0|.item|0|',
         389)],
        'code-line': '        raise ValueError("can only convert an array of size 1 to a Python scalar")\n',
        'first-line': 398,
        'folded-linenos': [],
        'sel-line': 417,
        'sel-line-start': 10688,
        'selection_end': 10688,
        'selection_start': 10688,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/indexes/base.py'): {'attrib-starts': [('Index|0|',
        319),
        ('Index|0|.get_loc|0|',
         3776)],
        'code-line': '            raise KeyError(key) from err\n',
        'first-line': 3791,
        'folded-linenos': [],
        'sel-line': 3811,
        'sel-line-start': 122048,
        'selection_end': 122048,
        'selection_start': 122048,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/seaborn/_core/data.py'): {'attrib-starts': [('PlotData|0|',
        16),
        ('PlotData|0|._assign_variables|0|',
         126)],
        'code-line': '                raise ValueError(err)\n',
        'first-line': 212,
        'folded-linenos': [],
        'sel-line': 231,
        'sel-line-start': 8160,
        'selection_end': 8160,
        'selection_start': 8160,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/unittest/case.py'): {'attrib-starts': [('TestCase|0|',
        344),
        ('TestCase|0|.assertAlmostEqual|0|',
         895)],
        'code-line': '        raise self.failureException(msg)\r\n',
        'first-line': 919,
        'folded-linenos': [],
        'sel-line': 938,
        'sel-line-start': 36391,
        'selection_end': 36391,
        'selection_start': 36391,
        'zoom': 0},
                       loc('../mesa-test/template.py'): {'attrib-starts': [('PlotContext|0|',
        36),
        ('PlotContext|0|.get_file_name|0|',
         62)],
        'code-line': "        return join(self.figs, base if PlotContext.Seq == 1 else f'{base}{PlotContext.Seq - 0}')\r\n",
        'first-line': 47,
        'folded-linenos': [],
        'sel-line': 64,
        'sel-line-start': 2195,
        'selection_end': 2291,
        'selection_start': 2291,
        'zoom': 0},
                       loc('../mesa-test/wealth.py'): {'attrib-starts': [('MoneyModel|0|',
        71)],
        'code-line': '    def get_gini(self):\r\n',
        'first-line': 81,
        'folded-linenos': [],
        'sel-line': 92,
        'sel-line-start': 3534,
        'selection_end': 3826,
        'selection_start': 3534,
        'zoom': 0},
                       loc('bar.py'): {'attrib-starts': [],
                                       'code-line': '\r\n',
                                       'first-line': 14,
                                       'folded-linenos': [],
                                       'sel-line': 19,
                                       'sel-line-start': 764,
                                       'selection_end': 764,
                                       'selection_start': 764,
                                       'zoom': 0},
                       loc('el-farol.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('elfarol.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 92,
        'folded-linenos': [],
        'sel-line': 129,
        'sel-line-start': 5180,
        'selection_end': 5180,
        'selection_start': 5180,
        'zoom': 0},
                       loc('patron.py'): {'attrib-starts': [('Patron|0|',
        19),
        ('Patron|0|.review_strategy|0|',
         50)],
        'code-line': '\t\t\t\tself.change_strategy()\r\n',
        'first-line': 37,
        'folded-linenos': [],
        'sel-line': 57,
        'sel-line-start': 2017,
        'selection_end': 2083,
        'selection_start': 2017,
        'zoom': 0},
                       loc('strategy.py'): {'attrib-starts': [('StrategyFactory|0|',
        86),
        ('StrategyFactory|0|.create|0|',
         93)],
        'code-line': '\t\t\t\treturn Trend(self.random,self.population,self.log,m=self.random.randint(4,8))\r\n',
        'first-line': 83,
        'folded-linenos': [],
        'sel-line': 103,
        'sel-line-start': 3521,
        'selection_end': 3524,
        'selection_start': 3524,
        'zoom': 0}}
search.replace-history = ['N',
                          'salf.active']
search.search-history = ['population',
                         'self.index',
                         'data',
                         'gini',
                         'pd',
                         'accu']
