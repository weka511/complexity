#!wing
#!version=10.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('el-farol.py'): ('project',
        ('--show --basket_min=12',
         '')),
                      loc('template.py'): ('project',
        ('--show',
         '')),
                      loc('wealth.py'): ('project',
        ('--show',
         ''))}
[user attributes]
debug.recent-run-args = {loc('el-farol.py'): ['--show --basket_min=12',
        '--show ',
        '--show  --iterations 260',
        '--show',
        '--help',
        '--show --iterations 100'],
                         loc('template.py'): ['--show',
        '--seed 42'],
                         loc('wealth.py'): ['--show']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2557280118255728,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(3,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../AppData/Local/Programs/Python/Python312/Lib/_weakrefset.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/_weakrefset.py'),
                      'WeakSet')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/abc.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/abc.py'),
                             'update_abstractmethods')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/abc.py'),
                      'ABC')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/argparse.py'),
                             '__version__')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/argparse.py'),
                      'Action')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/random.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Program Files/Wing Personal 10/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_api/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_api/__init__.py'),
                      'caching_module_getattr')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/pyplot.py'),
                             '_warn_if_gui_out_of_main_thread')]],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/agent.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/agent.py'),
                             'Agent')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/agent.py'),
                      'Agent')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/datacollection.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/datacollection.py'),
                      'DataCollector')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/model.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/model.py'),
                      'Model')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/linalg/linalg.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/linalg/linalg.py'),
                             '__all__')]],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/linalg/linalg.py'),
                      'array_function_dispatch')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/base.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/base.py'),
                             '_shared_docs')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/base.py'),
                      'IndexOpsMixin')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/seaborn/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/seaborn/_base.py'),
                      'categorical_order')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../../dynamics/chaos_book/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../learn/README.md'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('../../learn/bayes1.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('../../learn/bayes1.py'),
        'alphas')]},
        loc('../../learn/cavi1.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('../../learn/cavi1.py'),
        'ys')]],
                                      'top-node': [('generic attribute',
        loc('../../learn/cavi1.py'),
        'ax1')]},
        loc('../../learn/fashion.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/fashion.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../learn/fashion.py'),
                      'class_names')]},
        loc('../../learn/fcs.py'): {'expanded-nodes': [],
                                    'selected-nodes': [None],
                                    'top-node': None},
        loc('../../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../learn/fcs/fcs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/fcs.py'),
                      'args')]},
        loc('../../learn/fcs/gcps.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/gcps.py'),
                      'a')]},
        loc('../../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/partition.py'),
                      'args')]},
        loc('../../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../../learn/flowers.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/flowers.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../learn/flowers.py'),
                      'args')]},
        loc('../../learn/train.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('../../learn/train.py'),
        '_')]],
                                      'top-node': [('generic attribute',
        loc('../../learn/train.py'),
        'alpha')]},
        loc('../../tm/README.md'): {'expanded-nodes': [],
                                    'selected-nodes': [None],
                                    'top-node': None},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('el-farol.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': None},
        loc('template.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('template.py'),
        'args')]},
        loc('wealth.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'color',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'happiness',
                                       'fReverse': False,
                                       'fSearchText': 'minimum_happiness',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('el-farol.py'),
        {'attrib-starts': [('Patron|0|',
                            170)],
         'code-line': '    def calculate_happiness(self):\r\n',
         'first-line': 289,
         'folded-linenos': [],
         'sel-line': 188,
         'sel-line-start': 7328,
         'selection_end': 7362,
         'selection_start': 7362,
         'zoom': 0},
        1739434901.1489477],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             170)],
          'code-line': '    def calculate_happiness(self):\r\n',
          'first-line': 177,
          'folded-linenos': [],
          'sel-line': 188,
          'sel-line-start': 7328,
          'selection_end': 7355,
          'selection_start': 7336,
          'zoom': 0},
         1739434922.699762],
        [loc('el-farol.py'),
         {'attrib-starts': [],
          'code-line': 'class ElFarol(mesa.Model):\r\n',
          'first-line': 212,
          'folded-linenos': [],
          'sel-line': 214,
          'sel-line-start': 8436,
          'selection_end': 8449,
          'selection_start': 8442,
          'zoom': 0},
         1739434939.53273],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             170),
                            ('Patron|0|.__init__|0|',
                             174)],
          'code-line': '        self.happiness = []\r\n',
          'first-line': 165,
          'folded-linenos': [],
          'sel-line': 176,
          'sel-line-start': 6922,
          'selection_end': 6944,
          'selection_start': 6935,
          'zoom': 0},
         1739434942.2934365],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             170),
                            ('Patron|0|.__init__|0|',
                             174)],
          'code-line': '        self.happiness_total = 0\r\n',
          'first-line': 171,
          'folded-linenos': [],
          'sel-line': 178,
          'sel-line-start': 6976,
          'selection_end': 7004,
          'selection_start': 6989,
          'zoom': 0},
         1739435001.7308207],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             170),
                            ('Patron|0|.calculate_happiness|0|',
                             187)],
          'code-line': '        self.happiness_total += (1 if self.attend and self.model.is_comfortable() else 0)\r\n',
          'first-line': 177,
          'folded-linenos': [],
          'sel-line': 188,
          'sel-line-start': 7335,
          'selection_end': 7363,
          'selection_start': 7348,
          'zoom': 0},
         1739435015.0077205],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             170),
                            ('Patron|0|.__init__|0|',
                             174)],
          'code-line': '        self.happiness_total = 0\r\n',
          'first-line': 168,
          'folded-linenos': [],
          'sel-line': 178,
          'sel-line-start': 6976,
          'selection_end': 7004,
          'selection_start': 6989,
          'zoom': 0},
         1739435017.1285536],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             170),
                            ('Patron|0|.calculate_happiness|0|',
                             187)],
          'code-line': '        self.happiness_total += (1 if self.attend and self.model.is_comfortable() else 0)\r\n',
          'first-line': 177,
          'folded-linenos': [],
          'sel-line': 188,
          'sel-line-start': 7335,
          'selection_end': 7363,
          'selection_start': 7348,
          'zoom': 0},
         1739435019.0727377],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             170),
                            ('Patron|0|.__init__|0|',
                             174)],
          'code-line': '        self.happiness = 0\r\n',
          'first-line': 168,
          'folded-linenos': [],
          'sel-line': 178,
          'sel-line-start': 6976,
          'selection_end': 6998,
          'selection_start': 6989,
          'zoom': 0},
         1739435020.794421],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             170),
                            ('Patron|0|.calculate_happiness|0|',
                             187)],
          'code-line': '        self.happiness += (1 if self.attend and self.model.is_comfortable() else 0)\r\n',
          'first-line': 177,
          'folded-linenos': [],
          'sel-line': 188,
          'sel-line-start': 7329,
          'selection_end': 7351,
          'selection_start': 7342,
          'zoom': 0},
         1739435022.9476182],
        [loc('el-farol.py'),
         {'attrib-starts': [('ElFarol|0|',
                             212),
                            ('ElFarol|0|.__init__|0|',
                             216)],
          'code-line': "            agent_reporters={'Happiness' : 'happiness'}\r\n",
          'first-line': 209,
          'folded-linenos': [],
          'sel-line': 225,
          'sel-line-start': 8870,
          'selection_end': 8923,
          'selection_start': 8923,
          'zoom': 0},
         1739435024.938566],
        [loc('el-farol.py'),
         {'attrib-starts': [('ElFarol|0|',
                             212),
                            ('ElFarol|0|.__init__|0|',
                             216)],
          'code-line': "            agent_reporters={'Happiness' : 'happiness'}\r\n",
          'first-line': 222,
          'folded-linenos': [],
          'sel-line': 225,
          'sel-line-start': 8870,
          'selection_end': 8923,
          'selection_start': 8914,
          'zoom': 0},
         1739435090.595031],
        [loc('el-farol.py'),
         {'attrib-starts': [('ElFarol|0|',
                             212),
                            ('ElFarol|0|.__init__|0|',
                             216)],
          'code-line': "            agent_reporters={'Happiness' : 'happiness'}\r\n",
          'first-line': 169,
          'folded-linenos': [],
          'sel-line': 225,
          'sel-line-start': 8870,
          'selection_end': 8923,
          'selection_start': 8914,
          'zoom': 0},
         1739484634.2261174],
        [loc('el-farol.py'),
         {'attrib-starts': [('parse_arguments|0|',
                             36)],
          'code-line': '    basket_min = 5\r\n',
          'first-line': 39,
          'folded-linenos': [],
          'sel-line': 43,
          'sel-line-start': 1326,
          'selection_end': 1344,
          'selection_start': 1327,
          'zoom': 0},
         1739484991.245124],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             169),
                            ('Patron|0|.get_expected_happiness|0|',
                             198)],
          'code-line': '        return self.model.step_number * self.minimum_happiness\r\n',
          'first-line': 165,
          'folded-linenos': [],
          'sel-line': 199,
          'sel-line-start': 7722,
          'selection_end': 7784,
          'selection_start': 7767,
          'zoom': 0},
         1739485236.452373],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             169),
                            ('Patron|0|.get_expected_happiness|0|',
                             198)],
          'code-line': '        return self.model.step_number * self.minimum_happiness\r\n',
          'first-line': 195,
          'folded-linenos': [],
          'sel-line': 199,
          'sel-line-start': 7722,
          'selection_end': 7784,
          'selection_start': 7767,
          'zoom': 0},
         1739485245.4272554],
        [loc('el-farol.py'),
         {'attrib-starts': [('Patron|0|',
                             169),
                            ('Patron|0|.review_strategy|0|',
                             198)],
          'code-line': "        Periodically compare predictions with reality: if they don't match well enough, change strategy.\r\n",
          'first-line': 195,
          'folded-linenos': [],
          'sel-line': 200,
          'sel-line-start': 7728,
          'selection_end': 7832,
          'selection_start': 7832,
          'zoom': 0},
         1739485637.4073384],
        [loc('wealth.py'),
         {'attrib-starts': [],
          'code-line': "'''Wealth example from tutorial https://mesa.readthedocs.io/stable/tutorials/intro_tutorial.html'''\r\n",
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 724,
          'selection_end': 820,
          'selection_start': 756,
          'zoom': 0},
         1739485977.3803504],
        [loc('wealth.py'),
         {'attrib-starts': [],
          'code-line': '        g4.set(\r\n',
          'first-line': 134,
          'folded-linenos': [],
          'sel-line': 151,
          'sel-line-start': 5929,
          'selection_end': 6096,
          'selection_start': 5930,
          'zoom': 0},
         1739485979.087844],
        [loc('template.py'),
         {'attrib-starts': [('PlotContext|0|',
                             36),
                            ('PlotContext|0|.__enter__|0|',
                             46)],
          'code-line': '            self.fig.suptitle(self.suptitle)\r\n',
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 1807,
          'selection_end': 1851,
          'selection_start': 1851,
          'zoom': 0},
         1739485980.463716]],
        20),
        'current-loc': None,
        'editor-state-list': [],
        'has-focus': True,
        'locked': False},
        []),
                               'open_files': []},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1739485532.5276299),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1739485987.6931014),
                 'user_data': {}},
        'window-alloc': (2,
                         1,
                         1358,
                         734)}]}
guimgr.recent-documents = [loc('wealth.py')]
guimgr.visual-state = {loc('../../AppData/Local/Programs/Python/Python311/Lib/site-packages/pandas/core/indexes/base.py'): {'attrib-starts': [('Index|0|',
        277),
        ('Index|0|.get_loc|0|',
         3754)],
        'code-line': '                raise KeyError(key) from err\r\n',
        'first-line': 3784,
        'folded-linenos': [],
        'sel-line': 3804,
        'sel-line-start': 127578,
        'selection_end': 127578,
        'selection_start': 127578,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/_weakrefset.py'): {'attrib-starts': [('_IterationGuard|0|',
        10),
        ('_IterationGuard|0|.__exit__|0|',
         26)],
        'code-line': '        w = self.weakcontainer()\r\n',
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 806,
        'selection_end': 806,
        'selection_start': 806,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/argparse.py'): {'attrib-starts': [],
        'code-line': 'class ArgumentParser(_AttributeHolder, _ActionsContainer):\r\n',
        'first-line': 1736,
        'folded-linenos': [],
        'sel-line': 1736,
        'sel-line-start': 64373,
        'selection_end': 64393,
        'selection_start': 64379,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/random.py'): {'attrib-starts': [('Random|0|',
        109)],
        'code-line': '    def randint(self, a, b):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 331,
        'sel-line-start': 11330,
        'selection_end': 11345,
        'selection_start': 11338,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_api/__init__.py'): {'attrib-starts': [('check_in_list|0|',
        98)],
        'code-line': '            raise ValueError(msg)\n',
        'first-line': 109,
        'folded-linenos': [],
        'sel-line': 128,
        'sel-line-start': 3871,
        'selection_end': 3871,
        'selection_start': 3871,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        116),
        ('Artist|0|._update_props|0|',
         1175)],
        'code-line': '                        raise AttributeError(\n',
        'first-line': 1173,
        'folded-linenos': [],
        'sel-line': 1192,
        'sel-line-start': 40739,
        'selection_end': 40739,
        'selection_start': 40739,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('figure|0|',
        776)],
        'code-line': '    figsize : (float, float), default: :rc:`figure.figsize`\n',
        'first-line': 796,
        'folded-linenos': [],
        'sel-line': 813,
        'sel-line-start': 28428,
        'selection_end': 28486,
        'selection_start': 28479,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/agent.py'): {'attrib-starts': [('Agent|0|',
        32),
        ('Agent|0|.create_agents|0|',
         88)],
        'code-line': '            agent = cls(model, *instance_args, **instance_kwargs)\n',
        'first-line': 112,
        'folded-linenos': [],
        'sel-line': 131,
        'sel-line-start': 4093,
        'selection_end': 4093,
        'selection_start': 4093,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/datacollection.py'): {'attrib-starts': [('DataCollector|0|',
        43),
        ('DataCollector|0|.__init__|0|',
         53)],
        'code-line': '            for name, reporter in agent_reporters.items():\n',
        'first-line': 109,
        'folded-linenos': [],
        'sel-line': 124,
        'sel-line-start': 5401,
        'selection_end': 5401,
        'selection_start': 5401,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/mesa/model.py'): {'attrib-starts': [('Model|0|',
        28),
        ('Model|0|._wrapped_step|0|',
         115)],
        'code-line': '        self._user_step(*args, **kwargs)\n',
        'first-line': 107,
        'folded-linenos': [],
        'sel-line': 121,
        'sel-line-start': 4449,
        'selection_end': 4449,
        'selection_start': 4449,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/linalg/linalg.py'): {'attrib-starts': [('_raise_linalgerror_lstsq|0|',
        122)],
        'code-line': '    raise LinAlgError("SVD did not converge in Linear Least Squares")\r\n',
        'first-line': 104,
        'folded-linenos': [],
        'sel-line': 123,
        'sel-line-start': 3754,
        'selection_end': 3754,
        'selection_start': 3754,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/base.py'): {'attrib-starts': [('SelectionMixin|0|',
        180),
        ('SelectionMixin|0|.__getitem__|0|',
         231)],
        'code-line': '                raise KeyError(f"Column not found: {key}")\n',
        'first-line': 232,
        'folded-linenos': [],
        'sel-line': 243,
        'sel-line-start': 6629,
        'selection_end': 6629,
        'selection_start': 6629,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/pandas/core/generic.py'): {'attrib-starts': [('NDFrame|0|',
        243),
        ('NDFrame|0|.__nonzero__|0|',
         1575)],
        'code-line': '        raise ValueError(\n',
        'first-line': 1571,
        'folded-linenos': [],
        'sel-line': 1576,
        'sel-line-start': 48785,
        'selection_end': 48785,
        'selection_start': 48785,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/seaborn/_base.py'): {'attrib-starts': [('VectorPlotter|0|',
        615),
        ('VectorPlotter|0|.add_legend_data|0|',
         1201)],
        'code-line': '            artist = func(label=label, **{"color": ".2", **common_kws, **level_kws})\n',
        'first-line': 1255,
        'folded-linenos': [],
        'sel-line': 1266,
        'sel-line-start': 48640,
        'selection_end': 48640,
        'selection_start': 48640,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python312/Lib/site-packages/seaborn/distributions.py'): {'attrib-starts': [],
        'code-line': 'def histplot(\n',
        'first-line': 1301,
        'folded-linenos': [],
        'sel-line': 1357,
        'sel-line-start': 49048,
        'selection_end': 49060,
        'selection_start': 49052,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'wealth.py|Wealth example from tutorial\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 176,
        'selection_end': 176,
        'selection_start': 176,
        'zoom': 0},
                       loc('el-farol.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('ichi.py'): {'attrib-starts': [],
        'code-line': '# https://mesa.readthedocs.io/en/stable/tutorials/intro_tutorial.html\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 69,
        'selection_start': 2,
        'zoom': 0},
                       loc('template.py'): {'attrib-starts': [('PlotContext|0|',
        36),
        ('PlotContext|0|.__enter__|0|',
         46)],
        'code-line': '            self.fig.suptitle(self.suptitle)\r\n',
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 49,
        'sel-line-start': 1807,
        'selection_end': 1851,
        'selection_start': 1851,
        'zoom': 0},
                       loc('wealth.py'): {'attrib-starts': [],
        'code-line': "'''Wealth example from tutorial https://mesa.readthedocs.io/stable/tutorials/intro_tutorial.html'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 724,
        'selection_end': 820,
        'selection_start': 756,
        'zoom': 0}}
search.replace-history = ['happiness']
search.search-history = ['happiness_total',
                         'tolerance',
                         'log',
                         'figsize',
                         'patr',
                         'create_']
